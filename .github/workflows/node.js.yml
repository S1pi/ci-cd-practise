# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    env:
      NODE_ENV: development
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x, 24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
      # - name: Setup MySql
      #   run: |
      #     sudo systemctl start mysql
      #     cp .env.sample .env

      # - name: Create test Database
      #   run: |
      #     mysql -u root -proot < db/create-db.sql

      - name: Use Node.js ${{ matrix.node-version }} in ${{ env.NODE_ENV }} mode
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci

      - name: wait for DB
        env:
          MYSQL_PWD: ${{ secrets.DB_ROOT_PASSWORD }}
        run: |
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -uroot -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL ready"
              break
            fi
            echo "Waiting MySQL ($i/30)..."
            sleep 2
          done

      - name: Initialize DB
        env:
          MYSQL_PWD: ${{ secrets.DB_ROOT_PASSWORD }}
        run: |
          mysql -h 127.0.0.1 -uroot "${{ secrets.DB_NAME }}" < db/create-db.sql

      - name: Create env for app
        run: |
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - run: npm run build --if-present
      - run: npm run test:unit
